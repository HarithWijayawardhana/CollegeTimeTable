/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TimeTableUI;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Isuru
 */
public class Create_Time_Table extends javax.swing.JFrame {

    /**
     * Creates new form Create_Time_Table
     */
    public Create_Time_Table() {
        initComponents();
         jComboBoxSaveBy.setBackground(new Color(240, 240, 240, 50));
        setSampleData();
   
        //Setting MultiLineTableCellRenderer for each column
        jTableCTT.getColumnModel().getColumn(0).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(1).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(2).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(3).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(4).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(5).setCellRenderer(new MultiLineTableCellRenderer());
        
        //Setting MultiLineTableCellEditor for each column
        jTableCTT.getColumnModel().getColumn(0).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(1).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(2).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(3).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(4).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(5).setCellEditor(new MultilineTableCellEditor());
        
        jTableCTT.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        jTableCTT.setRowSelectionAllowed(false);
        jTableCTT.setColumnSelectionAllowed(false);
        jTableCTT.setCellSelectionEnabled(true);
        jTableCTT.setRowHeight(90);
        
        //Setting the table to JScrollPane
        jScrollPaneCTT.setViewportView(jTableCTT);
        
        AutoCompleteDecorator.decorate(jComboBoxID);
        populateJComboBoxSearch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxSaveBy = new javax.swing.JComboBox<>();
        jComboBoxID = new javax.swing.JComboBox<>();
        jScrollPaneCTT = new javax.swing.JScrollPane();
        jTableCTT = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("                          HOME");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -1, 440, 120));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 80, 60));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("                            VIEW");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 156, 400, 110));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view_1.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 90, 80));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 90, 60));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("                           INSERT");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 286, 400, 110));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, -1, 60));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("                            EDIT");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 390, 100));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 550, -1, 60));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("             REPORT GENARATION");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 546, 400, 110));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("          SAVE");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 606, 180, 50));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("         CLEAR");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 600, 180, 60));

        jComboBoxSaveBy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxSaveBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Save by Lecturer", "Save by Batch", "Save by Lecture Hall" }));
        jComboBoxSaveBy.setToolTipText("Type of Timetable to be Saved As");
        jComboBoxSaveBy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxSaveBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSaveByActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxSaveBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(747, 139, 200, -1));

        jComboBoxID.setToolTipText("Select Timetable ID");
        jPanel1.add(jComboBoxID, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 138, 190, 30));

        jTableCTT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableCTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Time Slot", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableCTT.setToolTipText("Double Click on a Cell to Edit");
        jTableCTT.setSelectionBackground(new java.awt.Color(0, 204, 204));
        jScrollPaneCTT.setViewportView(jTableCTT);

        jPanel1.add(jScrollPaneCTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 730, 390));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/drop down bar.png"))); // NOI18N
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(966, 134, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/drop down bar.png"))); // NOI18N
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(741, 134, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/time table management insert.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DefaultTableModel model;
    
    private void setSampleData()
    {           
        model = (DefaultTableModel) jTableCTT.getModel();
        String[] cols = {"Time Slots","Monday","Tuesday","Wednesday", "Thursday", "Friday"};
        String[][] data = { 
                            {"8.30 - 10.30", "Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502"},
                            {"10.30 - 12.30", "Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502"},
                            {"12.30 - 1.30", "Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502"},
                            {"1.30 - 3.30", "Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502"},
                            {"3.30 - 5.30", "Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502","Human Computer Interface\nDr. Antoni Liang\nB502"},
                          };
        
        model.setDataVector(data, cols);
    }
    
    public void clearTable()
    {
        String[] cols = {"Time Slots","Monday","Tuesday","Wednesday", "Thursday", "Friday"};
        String[][] data = { 
                            {"", "", "", "", "", ""},
                            {"", "", "", "", "", ""},
                            {"", "", "", "", "", ""},
                            {"", "", "", "", "", ""},
                            {"", "", "", "", "", ""},
                          };
        
        model = (DefaultTableModel) jTableCTT.getModel();
        model.setDataVector(data, cols);
        
        jTableCTT.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        
        //Setting MultiLineTableCellRenderer for each column
        jTableCTT.getColumnModel().getColumn(0).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(1).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(2).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(3).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(4).setCellRenderer(new MultiLineTableCellRenderer());
        jTableCTT.getColumnModel().getColumn(5).setCellRenderer(new MultiLineTableCellRenderer());
        
        //Setting MultiLineTableCellEditor for each column
        jTableCTT.getColumnModel().getColumn(0).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(1).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(2).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(3).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(4).setCellEditor(new MultilineTableCellEditor());
        jTableCTT.getColumnModel().getColumn(5).setCellEditor(new MultilineTableCellEditor());
                   
        //Setting row height
        jTableCTT.setRowHeight(100);
        //Setting the table to JScrollPane
        jScrollPaneCTT.setViewportView(jTableCTT);
    }
    
     private void populateJComboBoxSearch() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Hello");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/collegetimetable?" + "user=root&password=root");
            
            PreparedStatement statement = null;
            ResultSet resultSet = null;
            String query = null;

            String searchBy = jComboBoxSaveBy.getSelectedItem().toString();

            if(searchBy != null){
                switch (searchBy) {
                    case "Save by Lecturer":
                        query = "SELECT lecturerID FROM LECTURER";
                        break;
                    case "Save by Lecture Hall":
                        query = "SELECT HID FROM LECTUREHALL";
                        break;
                    case "Save by Batch":
                        query = "SELECT BATCH_ID FROM BATCH";
                        break;
                    default:
                        break;
                }
            }

            statement = conn.prepareStatement(query);
            resultSet = statement.executeQuery(); 

            String id = null;
                                    
            switch (searchBy) {
                case "Save by Lecturer":
                    jComboBoxID.removeAllItems();
                    jComboBoxID.addItem("");
                    while(resultSet.next()){
                        id = resultSet.getString("lecturerID");
                        jComboBoxID.addItem(id);
                        System.out.println("HII");
                    }
                    break;
                case "Save by Lecture Hall":
                    jComboBoxID.removeAllItems();
                    jComboBoxID.addItem("");
                    while(resultSet.next()){
                        id = resultSet.getString("HID");
                        jComboBoxID.addItem(id);
                    }
                    break;
                case "Save by Batch":
                    jComboBoxID.removeAllItems();
                    jComboBoxID.addItem("");
                    while(resultSet.next()){
                        id = resultSet.getString("BATCH_ID");
                        jComboBoxID.addItem(id);
                    }
                    break;
                default:
                    break;
            }                         
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);       
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    private void jComboBoxSaveByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSaveByActionPerformed
        populateJComboBoxSearch();
    }//GEN-LAST:event_jComboBoxSaveByActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
         try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Hello");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/collegetimetable?" + "user=root&password=root");
            
            if(jComboBoxID.getSelectedItem().toString().equals("")){
                JOptionPane.showMessageDialog(null, "Please enter a timetable id: Lecturer ID/Batch ID/Hall ID", "Warning!", JOptionPane.WARNING_MESSAGE);
            }
            else{
                int emptyCells = 0;                
                for (int i = 0; i < model.getRowCount(); i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {                      
                        if(model.getValueAt(i, j).toString() == ""){
                            emptyCells++;
                        }                      
                    }
                }
                
                if(emptyCells != (model.getRowCount() * model.getColumnCount())){
                    PreparedStatement statement = null;
                    String query = null;
                    ResultSet resultSet;
                    String searchID = jComboBoxID.getSelectedItem().toString();
                    query = "SELECT 1 FROM TIMETABLES WHERE LECTURER_ID = '" + searchID + "' OR HALL_ID = '" + searchID + "' OR BATCH_ID = '" + searchID + "'";
                    statement = conn.prepareStatement(query);
                    resultSet = statement.executeQuery(); 

                    if(!resultSet.next()){                     
                        query = "INSERT INTO TIMETABLES(TABLE_LOCATION , LECTURER_ID , HALL_ID , BATCH_ID) values(?,?,?,?)";
                        statement = conn.prepareStatement(query);

                        String lecturerID = null;
                        String hallID = null;
                        String batchID = null;
                        String fileLocation = null;

                        statement.setString(2, null);
                        statement.setString(3, null);
                        statement.setString(4, null);

                        String saveBy = jComboBoxSaveBy.getSelectedItem().toString();
                        if(saveBy != null)
                            switch (saveBy) {
                                case "Save by Lecturer":
                                    lecturerID = jComboBoxID.getSelectedItem().toString();
                                    fileLocation = "C:\\Users\\Isuru\\Desktop\\hci2\\TimeTables\\" + lecturerID;
                                    statement.setString(1, fileLocation);
                                    statement.setString(2, lecturerID );
                                    break;
                                case "Save by Lecture Hall":
                                    hallID = jComboBoxID.getSelectedItem().toString();
                                    fileLocation = "C:\\Users\\Isuru\\Desktop\\hci2\\TimeTables\\" + hallID;
                                    statement.setString(1, fileLocation);
                                    statement.setString(3, hallID );
                                    break;
                                case "Save by Batch":
                                    batchID = jComboBoxID.getSelectedItem().toString();
                                    fileLocation = "C:\\Users\\Isuru\\Desktop\\hci2\\TimeTables\\" + batchID;
                                    statement.setString(1, fileLocation);
                                    statement.setString(4, batchID );
                                    break;
                                default:
                                    break;
                            }


                        exportDataToExcel(fileLocation);    

                        statement.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Saved Successfully.");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Timetable already exists", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Nothing has been entered to the timetable", "Empty Timetable", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);       
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        View_Time_Table view = new View_Time_Table();
          view.setVisible(true);
          this.setVisible(false);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        Create_Time_Table create = new Create_Time_Table();
        create.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
         Edit_Time_Table update = new Edit_Time_Table();
        update.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        Time_Table_Report report = new Time_Table_Report();
        report.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        AdminHome tablehome = new AdminHome();
        tablehome .setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel4MouseClicked

    //Method to export time table to an excelsheet
    private void exportDataToExcel(String fileLocation) {        
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;
        model = (DefaultTableModel) jTableCTT.getModel();
        try {
            //Import excel poi libraries to netbeans
            excelJTableExporter = new XSSFWorkbook();
            XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
            //Loop to get jtable columns and rows
            for (int i = 0; i < model.getRowCount(); i++) {
                XSSFRow excelRow = excelSheet.createRow(i);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    XSSFCell excelCell = excelRow.createCell(j);
                    excelCell.setCellValue(model.getValueAt(i, j).toString());
                }
            }   
            File excelFile = new File(fileLocation);
            excelFOU = new FileOutputStream(excelFile + ".xlsx");
            excelBOU = new BufferedOutputStream(excelFOU);
            excelJTableExporter.write(excelBOU);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (excelBOU != null) {
                    excelBOU.close();
                }
                if (excelFOU != null) {
                    excelFOU.close();
                }
                if (excelJTableExporter != null) {
                    excelJTableExporter.close();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Create_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Create_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Create_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Create_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Create_Time_Table createTimeTable = new Create_Time_Table();
                createTimeTable.setSize(800, 400);
                createTimeTable.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                createTimeTable.show();
                //new CreateTimeTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxID;
    private javax.swing.JComboBox<String> jComboBoxSaveBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPaneCTT;
    private javax.swing.JTable jTableCTT;
    // End of variables declaration//GEN-END:variables
}
